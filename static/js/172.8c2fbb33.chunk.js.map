{"version":3,"file":"static/js/172.8c2fbb33.chunk.js","mappings":"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","sources":["HOC/WiithAuthRedirect.js","webpack://react_holodcov_1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react_holodcov_1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react_holodcov_1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\n//HOC High order Component\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to={\"/login\"} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__y+qh5\",\"profileInfoAva\":\"ProfileInfo_profileInfoAva__fFmE3\",\"statusContainer\":\"ProfileInfo_statusContainer__sM-Jw\"};","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activatedEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deActivatedEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.statusContainer}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activatedEditMode}>\r\n            Your status: {props.status || \"No status! \"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            value={status}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            type=\"text\"\r\n            onBlur={deActivatedEditMode}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\n\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { ProfileStatusWithHooks } from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnPfgcXgjaeI9zR1bvfxlM827GBdjkgjxwiQ&usqp=CAU\"></img>\r\n      </div> */}\r\n      <div className={(s.descriptionBlock, s.profileInfoAva)}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__xeAqQ\",\"posts\":\"MyPosts_posts__Nafo-\",\"input\":\"MyPosts_input__NEiMB\",\"error\":\"MyPosts_error__8BJoZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3OBfp\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKqIL063cbhyfBHg4NR8_GL295cExAIR1TZg&usqp=CAU\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likeCount}</span>\r\n        {/* <span>Dislike</span> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { PureComponent } from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n//Component MyPost\r\nconst MyPosts = React.memo((props) => {\r\n  window.props = [];\r\n  window.props.push(props);\r\n  console.log(props);\r\n  console.log(\"Hello!\");\r\n\r\n  let postsElement = [...props.postsData].reverse().map((post) => {\r\n    return <Post message={post.message} likeCount={post.likeCount} />;\r\n  });\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My post</h3>\r\n      <AddPostForm\r\n        addPost={props.addPost}\r\n        onPostChange={props.onPostChange}\r\n        newPostText={props.newPostText}\r\n      />\r\n      <div className={s.posts}>{postsElement}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  const validationSchemaAddPostForm = yup.object().shape({\r\n    newPostText: yup.string(),\r\n    // .required(\"Enter some post\")\r\n  });\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newPostText: \"\",\r\n      }}\r\n      validateOnBlur\r\n      onSubmit={(values, { resetForm }) => {\r\n        onAddPost(values);\r\n        resetForm();\r\n      }}\r\n      validationSchema={validationSchemaAddPostForm}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        isValid,\r\n        handleSubmit,\r\n        dirty,\r\n      }) => (\r\n        <div>\r\n          <textarea\r\n            placeholder=\"Enter new post\"\r\n            className={s.input}\r\n            name={\"newPostText\"}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.newPostText}\r\n          ></textarea>\r\n          {touched.newPostText && errors.newPostText && (\r\n            <p className={s.error}>{errors.newPostText}</p>\r\n          )}\r\n\r\n          <div>\r\n            <button\r\n              disabled={!isValid && !dirty && !values.newPostText}\r\n              onClick={handleSubmit}\r\n              type={\"submit\"}\r\n            >\r\n              Add post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\n\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//Component MyPost\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    //\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(MyPosts);\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfileId,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"./../../redux/profile-reducer\";\r\nimport {\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\n\r\nimport { WithAuthRedirect } from \"../../HOC/WiithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport Login from \"./../Login/Login\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowMyProfile: true,\r\n    };\r\n  }\r\n  ////new version\r\n  componentDidMount() {\r\n    let profileId = +this.props.router.params.profileId;\r\n    let authorizedProfileId = this.props.authorizedProfileId;\r\n\r\n    if (profileId) {\r\n      this.props.getProfileId(profileId);\r\n      this.props.getStatus(profileId);\r\n    } else {\r\n      if (this.props.isAuth) {\r\n        this.props.getProfileId(authorizedProfileId);\r\n        this.props.getStatus(authorizedProfileId);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n//В новой версии нет withRouter. Создаем сами:\r\nexport function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedProfileId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, { getProfileId, getStatus, updateStatus })\r\n)(ProfileContainer);\r\n"],"names":["mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","value","onChange","e","currentTarget","autoFocus","type","onBlur","updateStatus","profile","src","photos","large","Preloader","message","likeCount","MyPosts","window","push","console","log","postsElement","postsData","reverse","map","post","AddPostForm","addPost","onPostChange","newPostText","validationSchemaAddPostForm","yup","shape","initialValues","validateOnBlur","onSubmit","values","resetForm","onAddPost","validationSchema","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","placeholder","name","disabled","onClick","compose","profilePage","dispatch","addPostActionCreator","MyPostsContainer","ProfileContainer","isShowMyProfile","profileId","router","params","authorizedProfileId","getProfileId","getStatus","withRouter","location","useLocation","navigate","useNavigate","useParams","id"],"sourceRoot":""}