{"version":3,"file":"static/js/158.4d9f620a.chunk.js","mappings":"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","sources":["HOC/WiithAuthRedirect.js","components/Common/Pagination/Pagination.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\n//HOC High order Component\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to={\"/login\"} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../../Users/Users.module.css\";\r\n// import cn from \"classNames\";\r\n\r\n//вместо props используем деструктуризацию\r\nlet Pagination = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  // let { portionNumber, setPortionNumber } = useState(1);\r\n  const [portionNumber, setPortionNumber] = useState(\r\n    Math.floor(currentPage / 10) + 1\r\n  );\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREVIOUS PAGE\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter((p) => {\r\n          return p >= leftPortionPageNumber && p <= rightPortionPageNumber;\r\n        })\r\n        .map((p) => {\r\n          return (\r\n            <button\r\n              className={currentPage === p && styles.selectedPage}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </button>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT PAGE\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport { NavLink, Navigate } from \"react-router-dom\";\r\nimport Pagination from \"../Common/Pagination/Pagination\";\r\n\r\nlet Users = (props) => {\r\n  let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        {pages.map((p) => {\r\n          return (\r\n            <button\r\n              className={props.currentPage === p && styles.selectedPage}\r\n              onClick={(e) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </button>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <Pagination\r\n        currentPage={props.currentPage}\r\n        onPageChanged={props.onPageChanged}\r\n        totalItemsCount={props.totalCount}\r\n        pageSize={props.pageSize}\r\n      />\r\n      {props.usersData.map((u) => {\r\n        return (\r\n          <div key={u.id}>\r\n            <span>\r\n              <NavLink to={\"/profile/\" + u.id}>\r\n                <img\r\n                  alt=\"images\"\r\n                  src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                  className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n              <div>\r\n                {u.followed ? (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === u.id\r\n                    )}\r\n                    onClick={() => {\r\n                      props.unFollow(u.id);\r\n                    }}\r\n                  >\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === u.id\r\n                    )}\r\n                    onClick={() => {\r\n                      props.follow(u.id);\r\n                    }}\r\n                  >\r\n                    Follow\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </span>\r\n            <span>\r\n              <span>\r\n                <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n              </span>\r\n              <span>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelectorHook, useSelector } from \"react-redux\";\r\n\r\nexport function getUsersSelector(state) {\r\n  return state.userPage.usersData;\r\n}\r\n// const getUsersSelector = useSelector((state) => {\r\n//   state.userPage.usersData;\r\n// });\r\n\r\n// function createSelectorHook(selector, callback) {\r\n//   return (state) => {\r\n//     callback(selector(state));\r\n//   };\r\n// }\r\n\r\n// export const getUsersReselect = createSelectorHook(\r\n//   getUsersSelector,\r\n//   (users) => {\r\n//     return users.filter((u) => true);\r\n//   }\r\n// );\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.userPage.pageSize;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.userPage.currentPage;\r\n};\r\nexport const getTotalCount = (state) => {\r\n  return state.userPage.totalCount;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.userPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.userPage.followingInProgress;\r\n};\r\nexport const getIsAuth = (state) => {\r\n  return state.auth.isAuth;\r\n};\r\n","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"./../Preloader/Preloader\";\r\nimport {\r\n  follow,\r\n  unFollow,\r\n  setCurrentPage,\r\n  togglefollowingProgress,\r\n  getUsers,\r\n} from \"./../../redux/users-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"./../../HOC/WiithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getPageSize,\r\n  getCurrentPage,\r\n  getTotalCount,\r\n  getIsFetching,\r\n  getFollowingInProgress,\r\n  getIsAuth,\r\n  getUsersSelector,\r\n} from \"./../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n\r\n        <Users\r\n          totalCount={this.props.totalCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          usersData={this.props.usersData}\r\n          unFollow={this.props.unFollow}\r\n          follow={this.props.follow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     usersData: state.userPage.usersData,\r\n//     pageSize: state.userPage.pageSize,\r\n//     currentPage: state.userPage.currentPage,\r\n//     totalCount: state.userPage.totalCount,\r\n//     isFetching: state.userPage.isFetching,\r\n//     followingInProgress: state.userPage.followingInProgress,\r\n//     isAuth: state.auth.isAuth,\r\n//   };\r\n// };\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // usersData: getUsersSelector(state),\r\n\r\n    usersData: getUsersSelector(state),\r\n    pageSize: getPageSize(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalCount: getTotalCount(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    isAuth: getIsAuth(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    togglefollowingProgress,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n"],"names":["mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","floor","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","styles","e","totalCount","usersData","u","id","alt","src","photos","small","followed","disabled","followingInProgress","some","unFollow","follow","name","status","getUsersSelector","userPage","getPageSize","getCurrentPage","getTotalCount","getIsFetching","isFetching","getFollowingInProgress","getIsAuth","UsersContainer","pageNumber","getUsers","Preloader","compose","setCurrentPage","togglefollowingProgress"],"sourceRoot":""}